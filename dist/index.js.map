{"version":3,"file":"index.js","sources":["../src/city/spawner.ts","../src/city/roles/harvester.ts","../src/city/index.ts","../src/index.ts"],"sourcesContent":["export const harvesterSpawner = (spawn: Spawn) => {\n  if (spawn.energy >= 200) {\n    const harvesterIndex = spawn.memory.harvesterIndex || 1\n\n    const err = spawn.spawnCreep(\n      [ WORK, CARRY, MOVE ],\n      `screeps-ai/${spawn.name}/harvester/${harvesterIndex}`,\n      { memory: { role: 'harvester' }}\n    )\n\n    spawn.memory.harvesterIndex = harvesterIndex + 1\n\n    console.log(err)\n  }\n}\n","export const harvester = (creep: Creep, spawn: Spawn) => {\n  if (typeof creep.carry.energy === 'undefined') {\n    return\n  }\n\n  if (creep.carry.energy < creep.carryCapacity) {\n    creep.say(`spawn=${spawn.name} creep=${creep.name} --> harvest`)\n    const sources = spawn.room.find<Source>(FIND_SOURCES)\n\n    if (!sources[0]) {\n      creep.suicide()\n      return\n    }\n\n    const err = creep.harvest(sources[0])\n\n    if (err === ERR_NOT_IN_RANGE) {\n      creep.moveTo(sources[0], {\n        visualizePathStyle: {\n          stroke: '#ff0000'\n        }\n      })\n    }\n  } else {\n    const err = creep.transfer(spawn, RESOURCE_ENERGY);\n\n    if (err === ERR_NOT_IN_RANGE) {\n      creep.moveTo(spawn, {\n        visualizePathStyle: {\n          stroke: '#ff0000'\n        }\n      })\n    }\n  }\n}\n","import { harvesterSpawner } from './spawner'\nimport { harvester } from './roles/harvester'\n\nexport const city = (spawn: Spawn) => {\n  harvesterSpawner(spawn)\n\n  const creeps = spawn.room.find<Creep>(FIND_MY_CREEPS, {\n    filter: (creep: Creep) => creep.memory.role === 'harvester'\n  })\n\n  for (const creep of Object.values(creeps)) {\n    harvester(creep, spawn)\n  }\n}\n","import { city } from './city/index'\n\nexport const loop = () => {\n  for (const creepName of Object.keys(Memory.creeps)) {\n    if (!Game.creeps[creepName]) {\n      delete Memory.creeps[creepName]\n    }\n  }\n\n  for (const spawnName of Object.keys(Game.spawns)) {\n    city(Game.spawns[spawnName])\n  }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM,gBAAgB,GAAG,CAAC,KAAY;IAC3C,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;QACvB,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,CAAA;QAEvD,MAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAC1B,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,EACrB,cAAc,KAAK,CAAC,IAAI,cAAc,cAAc,EAAE,EACtD,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,EAAC,CACjC,CAAA;QAED,KAAK,CAAC,MAAM,CAAC,cAAc,GAAG,cAAc,GAAG,CAAC,CAAA;QAEhD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;KACjB;CACF,CAAA;;ACdM,MAAM,SAAS,GAAG,CAAC,KAAY,EAAE,KAAY;IAClD,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,WAAW,EAAE;QAC7C,OAAM;KACP;IAED,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,EAAE;QAC5C,KAAK,CAAC,GAAG,CAAC,SAAS,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,IAAI,cAAc,CAAC,CAAA;QAChE,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAS,YAAY,CAAC,CAAA;QAErD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACf,KAAK,CAAC,OAAO,EAAE,CAAA;YACf,OAAM;SACP;QAED,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;QAErC,IAAI,GAAG,KAAK,gBAAgB,EAAE;YAC5B,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACvB,kBAAkB,EAAE;oBAClB,MAAM,EAAE,SAAS;iBAClB;aACF,CAAC,CAAA;SACH;KACF;SAAM;QACL,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QAEnD,IAAI,GAAG,KAAK,gBAAgB,EAAE;YAC5B,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;gBAClB,kBAAkB,EAAE;oBAClB,MAAM,EAAE,SAAS;iBAClB;aACF,CAAC,CAAA;SACH;KACF;CACF,CAAA;;;AC/BM,MAAM,IAAI,GAAG,CAAC,KAAY;IAC/B,gBAAgB,CAAC,KAAK,CAAC,CAAA;IAEvB,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAQ,cAAc,EAAE;QACpD,MAAM,EAAE,CAAC,KAAY,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW;KAC5D,CAAC,CAAA;IAEF,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACzC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;KACxB;CACF,CAAA;;MCXY,IAAI,GAAG;IAClB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QAClD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;YAC3B,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;SAChC;KACF;IAED,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAChD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAA;KAC7B;CACF,CAAA;;;;;"}